
> tree-sitter-bismuth@1.0.0 parse
> npx tree-sitter-cli parse rust.bth

(source_file [0, 0] - [85, 0]
  (top_call [0, 0] - [0, 4]
    (word_name [0, 0] - [0, 1])
    (literal [0, 1] - [0, 4]))
  (break [0, 4] - [1, 0])
  (top_call [1, 0] - [1, 17]
    (word_name [1, 0] - [1, 14])
    (literal [1, 14] - [1, 17]))
  (break [1, 17] - [2, 0])
  (ERROR [2, 4] - [2, 5])
  (top_call [2, 5] - [2, 32]
    (word_name [2, 5] - [2, 10])
    (literal [2, 10] - [2, 15])
    (ERROR [2, 16] - [2, 17])
    (word_name [2, 17] - [2, 24])
    (ERROR [2, 24] - [2, 27])
    (word_name [2, 27] - [2, 32]))
  (ERROR [2, 32] - [2, 33])
  (break [2, 33] - [4, 0]
    (ERROR [3, 4] - [3, 5]))
  (ERROR [4, 4] - [4, 5])
  (top_call [4, 5] - [4, 12]
    (word_name [4, 5] - [4, 12]))
  (ERROR [4, 12] - [4, 13])
  (break [4, 13] - [5, 0])
  (ERROR [5, 4] - [5, 5])
  (top_call [5, 7] - [5, 55]
    (comma_group [5, 7] - [5, 17]
      (word_name [5, 7] - [5, 9])
      (word_name [5, 11] - [5, 17]))
    (word_name [5, 31] - [5, 38])
    (word_name [5, 39] - [5, 43])
    (word_name [5, 44] - [5, 55]))
  (ERROR [5, 55] - [5, 56])
  (break [5, 56] - [6, 0])
  (ERROR [6, 4] - [6, 5])
  (top_call [6, 7] - [6, 49]
    (word_name [6, 7] - [6, 14])
    (word_name [6, 15] - [6, 27])
    (ERROR [6, 27] - [6, 28])
    (word_name [6, 31] - [6, 37])
    (word_name [6, 38] - [6, 40])
    (word_name [6, 41] - [6, 42])
    (word_name [6, 43] - [6, 49]))
  (ERROR [6, 49] - [6, 50])
  (break [6, 50] - [7, 0])
  (ERROR [7, 4] - [7, 5])
  (top_call [7, 7] - [7, 50]
    (word_name [7, 7] - [7, 12])
    (word_name [7, 31] - [7, 37])
    (word_name [7, 38] - [7, 40])
    (word_name [7, 41] - [7, 45])
    (word_name [7, 46] - [7, 50]))
  (ERROR [7, 50] - [7, 51])
  (break [7, 51] - [8, 0])
  (ERROR [8, 4] - [8, 5])
  (top_call [8, 7] - [8, 18]
    (word_name [8, 7] - [8, 18]))
  (break [8, 18] - [9, 0])
  (top_call [9, 4] - [9, 9]
    (word_name [9, 4] - [9, 9]))
  (break [9, 9] - [10, 0])
  (top_call [10, 4] - [10, 7]
    (word_name [10, 4] - [10, 7]))
  (break [10, 7] - [13, 0]
    (ERROR [11, 0] - [11, 1]))
  (top_call [13, 0] - [13, 7]
    (word_name [13, 0] - [13, 5])
    (word_name [13, 6] - [13, 7]))
  (ERROR [13, 7] - [13, 8])
  (break [13, 8] - [15, 0])
  (top_call [15, 0] - [15, 13]
    (word_name [15, 0] - [15, 7])
    (word_name [15, 8] - [15, 13]))
  (ERROR [15, 13] - [15, 14])
  (break [15, 14] - [17, 0])
  (top_call [17, 0] - [17, 10]
    (word_name [17, 0] - [17, 7])
    (literal [17, 7] - [17, 10]))
  (break [17, 10] - [18, 0])
  (top_call [18, 4] - [18, 11]
    (word_name [18, 4] - [18, 11]))
  (break [18, 11] - [19, 0])
  (top_call [19, 4] - [19, 11]
    (word_name [19, 4] - [19, 11]))
  (break [19, 11] - [20, 0])
  (top_call [20, 4] - [20, 32]
    (word_name [20, 4] - [20, 7])
    (comma_group [20, 8] - [20, 32]
      (word_name [20, 8] - [20, 15])
      (group [20, 17] - [20, 32]
        (top_call [20, 18] - [20, 31]
          (comma_group [20, 18] - [20, 31]
            (literal [20, 18] - [20, 24])
            (literal [20, 26] - [20, 31]))))))
  (break [20, 32] - [21, 0])
  (top_call [21, 4] - [21, 20]
    (word_name [21, 4] - [21, 7])
    (dot_pipe [21, 8] - [21, 20]
      (word_name [21, 8] - [21, 15])
      (word_name [21, 16] - [21, 20])))
  (break [21, 20] - [22, 0])
  (top_call [22, 4] - [22, 22]
    (word_name [22, 4] - [22, 8])
    (dot_pipe [22, 8] - [22, 22]
      (literal [22, 8] - [22, 17])
      (word_name [22, 18] - [22, 22])))
  (break [22, 22] - [25, 0]
    (ERROR [23, 0] - [23, 1]))
  (top_call [25, 0] - [25, 5]
    (word_name [25, 0] - [25, 3])
    (word_name [25, 4] - [25, 5]))
  (break [25, 5] - [26, 0])
  (top_call [26, 0] - [26, 5]
    (word_name [26, 0] - [26, 3])
    (word_name [26, 4] - [26, 5]))
  (break [26, 5] - [28, 0])
  (top_call [28, 0] - [28, 11]
    (word_name [28, 0] - [28, 5])
    (literal [28, 5] - [28, 11]))
  (ERROR [28, 12] - [28, 13])
  (break [28, 13] - [29, 0])
  (top_call [29, 4] - [29, 13]
    (word_name [29, 4] - [29, 13]))
  (break [29, 13] - [30, 0])
  (top_call [30, 4] - [30, 15]
    (word_name [30, 4] - [30, 10])
    (literal [30, 10] - [30, 15]))
  (break [30, 15] - [31, 0])
  (top_call [31, 4] - [31, 20]
    (word_name [31, 4] - [31, 10])
    (literal [31, 10] - [31, 15])
    (group [31, 15] - [31, 20]
      (top_call [31, 16] - [31, 19]
        (word_name [31, 16] - [31, 19]))))
  (break [31, 20] - [34, 0]
    (ERROR [32, 0] - [32, 1]))
  (top_call [34, 0] - [34, 17]
    (word_name [34, 0] - [34, 5])
    (word_name [34, 6] - [34, 11])
    (ERROR [34, 11] - [34, 12])
    (word_name [34, 13] - [34, 17]))
  (break [34, 17] - [35, 0])
  (top_call [35, 0] - [35, 9]
    (comma_group [35, 0] - [35, 9]
      (word_name [35, 0] - [35, 3])
      (word_name [35, 5] - [35, 9])))
  (break [35, 9] - [36, 0])
  (top_call [36, 0] - [36, 23]
    (word_name [36, 0] - [36, 2])
    (group [36, 2] - [36, 23]
      (top_call [36, 3] - [36, 21]
        (comma_group [36, 3] - [36, 21]
          (word_name [36, 3] - [36, 6])
          (ERROR [36, 8] - [36, 9])
          (word_name [36, 9] - [36, 21])))
      (ERROR [36, 21] - [36, 22])))
  (break [36, 23] - [38, 0])
  (top_call [38, 0] - [38, 9]
    (dot_pipe [38, 0] - [38, 9]
      (word_name [38, 0] - [38, 5])
      (word_name [38, 6] - [38, 9])))
  (ERROR [38, 10] - [38, 11])
  (break [38, 11] - [39, 0])
  (top_call [39, 4] - [39, 13]
    (word_name [39, 4] - [39, 13]))
  (ERROR [39, 13] - [39, 20]
    (ERROR [39, 16] - [39, 17])
    (ERROR [39, 18] - [39, 19]))
  (break [39, 20] - [40, 0])
  (infix_call [40, 4] - [40, 30]
    (comma_group [40, 4] - [40, 14]
      (word_name [40, 4] - [40, 10])
      (ERROR [40, 12] - [40, 13])
      (word_name [40, 13] - [40, 14]))
    (ERROR [40, 14] - [40, 15])
    (symbol_name [40, 16] - [40, 18])
    (ERROR [40, 19] - [40, 26]
      (word_name [40, 20] - [40, 26]))
    (pipe [40, 27] - [40, 30]
      (top_call [40, 28] - [40, 29]
        (word_name [40, 28] - [40, 29]))))
  (ERROR [40, 30] - [40, 31])
  (break [40, 31] - [41, 0])
  (infix_call [41, 4] - [41, 32]
    (comma_group [41, 4] - [41, 14]
      (word_name [41, 4] - [41, 10])
      (ERROR [41, 12] - [41, 13])
      (word_name [41, 13] - [41, 14]))
    (ERROR [41, 14] - [41, 15])
    (symbol_name [41, 16] - [41, 18])
    (ERROR [41, 19] - [41, 29]
      (word_name [41, 20] - [41, 26]))
    (pipe [41, 29] - [41, 32]
      (top_call [41, 30] - [41, 31]
        (word_name [41, 30] - [41, 31]))))
  (ERROR [41, 32] - [41, 35])
  (break [41, 35] - [44, 0]
    (ERROR [42, 0] - [42, 1]))
  (top_call [44, 0] - [44, 20]
    (word_name [44, 0] - [44, 10])
    (literal [44, 10] - [44, 20]
      (ERROR [44, 12] - [44, 18]
        (word_name [44, 13] - [44, 14]))))
  (break [44, 20] - [45, 0])
  (top_call [45, 4] - [45, 23]
    (word_name [45, 4] - [45, 7])
    (literal [45, 7] - [45, 11])
    (group [45, 12] - [45, 23]
      (top_call [45, 13] - [45, 22]
        (comma_group [45, 13] - [45, 22]
          (comma_group [45, 13] - [45, 17]
            (word_name [45, 13] - [45, 14])
            (word_name [45, 16] - [45, 17]))
          (ERROR [45, 19] - [45, 20])
          (word_name [45, 21] - [45, 22])))))
  (break [45, 23] - [46, 0])
  (top_call [46, 4] - [46, 23]
    (word_name [46, 4] - [46, 7])
    (literal [46, 7] - [46, 11])
    (group [46, 12] - [46, 23]
      (top_call [46, 13] - [46, 22]
        (comma_group [46, 13] - [46, 22]
          (comma_group [46, 13] - [46, 17]
            (word_name [46, 13] - [46, 14])
            (word_name [46, 16] - [46, 17]))
          (ERROR [46, 19] - [46, 20])
          (word_name [46, 21] - [46, 22])))))
  (break [46, 23] - [47, 0])
  (top_call [47, 4] - [47, 23]
    (word_name [47, 4] - [47, 7])
    (literal [47, 7] - [47, 11])
    (group [47, 12] - [47, 23]
      (top_call [47, 13] - [47, 22]
        (comma_group [47, 13] - [47, 22]
          (comma_group [47, 13] - [47, 17]
            (word_name [47, 13] - [47, 14])
            (word_name [47, 16] - [47, 17]))
          (ERROR [47, 19] - [47, 20])
          (word_name [47, 21] - [47, 22])))))
  (break [47, 23] - [48, 0])
  (top_call [48, 4] - [48, 23]
    (word_name [48, 4] - [48, 7])
    (literal [48, 7] - [48, 11])
    (group [48, 12] - [48, 23]
      (top_call [48, 13] - [48, 22]
        (comma_group [48, 13] - [48, 22]
          (comma_group [48, 13] - [48, 17]
            (word_name [48, 13] - [48, 14])
            (word_name [48, 16] - [48, 17]))
          (ERROR [48, 19] - [48, 20])
          (word_name [48, 21] - [48, 22])))))
  (break [48, 23] - [49, 0])
  (top_call [49, 4] - [49, 11]
    (word_name [49, 4] - [49, 8])
    (literal [49, 8] - [49, 11]))
  (break [49, 11] - [50, 0])
  (top_call [50, 4] - [50, 10]
    (word_name [50, 4] - [50, 7])
    (literal [50, 7] - [50, 10]))
  (break [50, 10] - [53, 0]
    (ERROR [51, 0] - [51, 1]))
  (top_call [53, 0] - [53, 29]
    (word_name [53, 0] - [53, 7])
    (ERROR [53, 7] - [53, 17]
      (word_name [53, 10] - [53, 11]))
    (comma_group [53, 17] - [53, 29]
      (word_name [53, 17] - [53, 18])
      (call [53, 20] - [53, 29]
        (word_name [53, 20] - [53, 24])
        (group [53, 24] - [53, 29]
          (top_call [53, 25] - [53, 28]
            (word_name [53, 25] - [53, 28]))))))
  (ERROR [53, 29] - [53, 30])
  (break [53, 30] - [55, 0])
  (top_call [55, 0] - [55, 15]
    (word_name [55, 0] - [55, 10])
    (group [55, 10] - [55, 15]
      (top_call [55, 11] - [55, 14]
        (word_name [55, 11] - [55, 14]))))
  (ERROR [55, 16] - [55, 20])
  (break [55, 20] - [56, 0])
  (top_call [56, 4] - [56, 12]
    (word_name [56, 4] - [56, 7])
    (literal [56, 7] - [56, 12]
      (ERROR [56, 10] - [56, 11])))
  (break [56, 12] - [57, 0])
  (top_call [57, 4] - [57, 12]
    (word_name [57, 4] - [57, 7])
    (literal [57, 7] - [57, 12]
      (ERROR [57, 10] - [57, 11])))
  (break [57, 12] - [58, 0])
  (top_call [58, 4] - [58, 12]
    (word_name [58, 4] - [58, 7])
    (literal [58, 7] - [58, 12]
      (ERROR [58, 10] - [58, 11])))
  (break [58, 12] - [59, 0])
  (top_call [59, 4] - [59, 12]
    (word_name [59, 4] - [59, 7])
    (literal [59, 7] - [59, 12]
      (ERROR [59, 10] - [59, 11])))
  (break [59, 12] - [60, 0])
  (top_call [60, 4] - [60, 11]
    (word_name [60, 4] - [60, 8])
    (literal [60, 8] - [60, 11]))
  (break [60, 11] - [61, 0])
  (top_call [61, 4] - [61, 10]
    (word_name [61, 4] - [61, 7])
    (literal [61, 7] - [61, 10]))
  (break [61, 10] - [64, 0]
    (ERROR [62, 0] - [62, 1]))
  (top_call [64, 0] - [64, 23]
    (word_name [64, 0] - [64, 7])
    (group [64, 7] - [64, 12]
      (top_call [64, 8] - [64, 11]
        (word_name [64, 8] - [64, 11])))
    (ERROR [64, 13] - [64, 17])
    (word_name [64, 17] - [64, 23]))
  (ERROR [64, 23] - [64, 24])
  (break [64, 24] - [67, 0])
  (top_call [67, 0] - [67, 47]
    (word_name [67, 0] - [67, 3])
    (word_name [67, 4] - [67, 7])
    (dot_pipe [67, 8] - [67, 20]
      (word_name [67, 8] - [67, 15])
      (word_name [67, 16] - [67, 20]))
    (word_name [67, 21] - [67, 24])
    (ERROR [67, 24] - [67, 25])
    (dot_pipe [67, 26] - [67, 41]
      (word_name [67, 26] - [67, 33])
      (word_name [67, 34] - [67, 41]))
    (literal [67, 41] - [67, 42])
    (literal [67, 42] - [67, 47]))
  (break [67, 47] - [69, 0])
  (top_call [69, 0] - [69, 24]
    (word_name [69, 0] - [69, 4])
    (ERROR [69, 4] - [69, 7])
    (word_name [69, 7] - [69, 14])
    (literal [69, 14] - [69, 24]))
  (ERROR [69, 24] - [69, 25])
  (break [69, 25] - [71, 0])
  (top_call [71, 0] - [71, 12]
    (dot_pipe [71, 0] - [71, 12]
      (word_name [71, 0] - [71, 7])
      (word_name [71, 8] - [71, 12])))
  (break [71, 12] - [72, 0])
  (top_call [72, 0] - [72, 13]
    (dot_pipe [72, 0] - [72, 13]
      (word_name [72, 0] - [72, 7])
      (word_name [72, 8] - [72, 13])))
  (break [72, 13] - [73, 0])
  (top_call [73, 0] - [73, 13]
    (word_name [73, 0] - [73, 7])
    (literal [73, 7] - [73, 8])
    (literal [73, 8] - [73, 13]))
  (break [73, 13] - [76, 0])
  (top_call [76, 0] - [76, 34]
    (word_name [76, 0] - [76, 7])
    (ERROR [76, 7] - [76, 10])
    (word_name [76, 10] - [76, 11])
    (comma_group [76, 11] - [76, 20]
      (literal [76, 11] - [76, 15])
      (word_name [76, 17] - [76, 20]))
    (word_name [76, 21] - [76, 31])
    (group [76, 31] - [76, 34]
      (top_call [76, 32] - [76, 33]
        (word_name [76, 32] - [76, 33]))))
  (ERROR [76, 34] - [76, 38])
  (ERROR [76, 39] - [76, 40])
  (break [76, 40] - [77, 0])
  (top_call [77, 4] - [77, 33]
    (dot_pipe [77, 4] - [77, 33]
      (dot_pipe [77, 4] - [77, 26]
        (dot_pipe [77, 4] - [77, 19]
          (dot_pipe [77, 4] - [77, 12]
            (word_name [77, 4] - [77, 5])
            (call [77, 6] - [77, 12]
              (word_name [77, 6] - [77, 9])
              (group [77, 9] - [77, 12]
                (top_call [77, 10] - [77, 11]
                  (word_name [77, 10] - [77, 11])))))
          (call [77, 13] - [77, 19]
            (word_name [77, 13] - [77, 16])
            (group [77, 16] - [77, 19]
              (top_call [77, 17] - [77, 18]
                (word_name [77, 17] - [77, 18])))))
        (call [77, 20] - [77, 26]
          (word_name [77, 20] - [77, 23])
          (group [77, 23] - [77, 26]
            (top_call [77, 24] - [77, 25]
              (word_name [77, 24] - [77, 25])))))
      (call [77, 27] - [77, 33]
        (word_name [77, 27] - [77, 30])
        (group [77, 30] - [77, 33]
          (top_call [77, 31] - [77, 32]
            (word_name [77, 31] - [77, 32]))))))
  (break [77, 33] - [80, 0]
    (ERROR [78, 0] - [78, 1]))
  (top_call [80, 0] - [80, 24]
    (word_name [80, 0] - [80, 5])
    (ERROR [80, 5] - [80, 8])
    (word_name [80, 8] - [80, 9])
    (comma_group [80, 9] - [80, 24]
      (literal [80, 9] - [80, 12])
      (call [80, 14] - [80, 24]
        (word_name [80, 14] - [80, 21])
        (group [80, 21] - [80, 24]
          (top_call [80, 22] - [80, 23]
            (word_name [80, 22] - [80, 23]))))))
  (ERROR [80, 24] - [80, 28])
  (ERROR [80, 29] - [80, 30])
  (break [80, 30] - [81, 0])
  (top_call [81, 4] - [81, 20]
    (word_name [81, 4] - [81, 11])
    (group [81, 11] - [81, 20]
      (ERROR [81, 12] - [81, 19])))
  (break [81, 20] - [82, 0])
  (top_call [82, 4] - [82, 31]
    (word_name [82, 4] - [82, 11])
    (group [82, 11] - [82, 31]
      (ERROR [82, 12] - [82, 14])
      (top_call [82, 15] - [82, 30]
        (comma_group [82, 15] - [82, 21]
          (pipe [82, 15] - [82, 17])
          (ERROR [82, 17] - [82, 18])
          (word_name [82, 20] - [82, 21]))
        (literal [82, 21] - [82, 22])
        (literal [82, 22] - [82, 30]))))
  (break [82, 31] - [83, 0])
  (top_call [83, 4] - [83, 20]
    (word_name [83, 4] - [83, 11])
    (group [83, 11] - [83, 20]
      (ERROR [83, 12] - [83, 19])))
  (break [83, 20] - [85, 0]
    (ERROR [84, 0] - [84, 1]))
  (top_call [85, 0] - [85, 0]
    (word_name [85, 0] - [85, 0])))
rust.bth	1 ms	(MISSING ")" [1, 17] - [1, 17])
